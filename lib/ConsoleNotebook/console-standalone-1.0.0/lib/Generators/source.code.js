
data = {
fileName:"binary.search.js",
numberOfLines:"44",
raw:{
ln_0:"// Program to implement iterative Binary Search",
ln_1:" ",
ln_2:"// A iterative binary search function. It returns",
ln_3:"// location of x in given array arr[l..r] is present,",
ln_4:"// otherwise -1",
ln_5:"",
ln_6:"function binarySearch(arr, x)",
ln_7:"{  ",
ln_8:"",
ln_9:"    let h = 0;",
ln_10:"    let t = arr.length - 1;",
ln_11:"    let mid;",
ln_12:"",
ln_13:"    while (t >= h) {",
ln_14:"         mid = h + Math.floor((t - h) / 2);",
ln_15:"  ",
ln_16:"        // If the element is present at the middle",
ln_17:"        // itself",
ln_18:"        if (arr[mid] == x){",
ln_19:"            return mid;",
ln_20:"        }",
ln_21:"            ",
ln_22:"  ",
ln_23:"        // If element is smaller than mid, then",
ln_24:"        // it can only be present in left subarray",
ln_25:"        if (arr[mid] > x){",
ln_26:"            t = mid - 1;",
ln_27:"        }",
ln_28:"             ",
ln_29:"        // Else the element can only be present",
ln_30:"        // in right subarray",
ln_31:"        else{",
ln_32:"            h = mid + 1;",
ln_33:"        }",
ln_34:"",
ln_35:"        counter++;",
ln_36:"            ",
ln_37:"    }",
ln_38:"  ",
ln_39:"    // We reach here when element is not",
ln_40:"    // present in array",
ln_41:"    return -1;",
ln_42:"}",
ln_43:" ",
}
};
